What happens when you initialize a repository? Why do you need to do it?
	
	It can track the changes in a repository. You can then go back to previous 
	commit when needed.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Repository has all the commits or the versions of commits.
	Working directory has all the files that can be tracked or untracked.
	Staging area has the files that I have tracked and to be committed to the repository in the next commit.

How can you use the staging area to make sure you have one commit per logical
change?

	Only add all the related files to the staging area when a logical change has been completed. Then commit the changes to the repository afterwards. 

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	When we wanna experiment with new variations of existing features.
	When entering a new phase of development. 

How do the diagrams help you visualize the branch structure?

	To see the relationship between branches and when the various commits come into play and 
	whether there is anything missing from the committed branch.  

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	Now that I can see the commits from the merged branches.
	The diagram makes it easier to visualize the relationships between various commits.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

	Automatic Pros: easy to operate, save time
	Automatic Cons: may accidentally merge areas that are not supposed to 
	Manual Pros: More flexible and sometimes conflicts need human intervention to resolve
	Manual Cons: More time consuming
